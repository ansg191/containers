name: Docker Release

on:
  push:
    tags: [ '*' ]

env:
  REGISTRY: ghcr.io

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract container name from tag
        id: extract_container_name
        # The tag is in the format container_name-v1.2.3
        # This step splits the tag on the first dash and outputs the container name.
        # Will error if the tag doesn't contain a dash.
        run: |
          CONTAINER_NAME=$(echo "${GITHUB_REF_NAME}" | cut -d'-' -f1)
          if [[ "${CONTAINER_NAME}" == "${GITHUB_REF}" ]]; then
            echo "Error: The tag ${GITHUB_REF} doesn't contain a dash."
            exit 1
          fi
          echo "Container name: ${CONTAINER_NAME}"
          echo "container_name=${CONTAINER_NAME}" >> $GITHUB_OUTPUT

      # Docker Build

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        env:
          IMAGE_NAME: ${{ github.repository }}/${{ steps.extract_container_name.outputs.container_name }}
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule,pattern=nightly
            type=ref,event=branch
            type=ref,event=pr
            type=match,pattern=${{ steps.extract_container_name.outputs.container_name }}-(.*),group=1
            type=sha

      # Build and push Docker image with Buildx (don't push on PR)
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: containers/${{ steps.extract_container_name.outputs.container_name }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
